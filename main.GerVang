package application;
    
import com.sun.glass.ui.Application.EventHandler;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.geometry.Pos;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.TextAlignment;
import javafx.stage.WindowEvent;


public class Main extends Application {
  Button saveButton;
 
    @Override
    public void start(Stage primaryStage) {
        try {
            saveButton = new Save();
            saveHandler(saveButton);
            
            
            
            BorderPane root = new BorderPane();
            int qCount = 0;
            //Top right to help button
             Button rightLab = new Button("?");
             rightLab.setTextAlignment(TextAlignment.RIGHT);
             
           //setting Title to Top center
             HBox topLabel = new HBox();
             Label titleQuiz = new Label("Quizzies"); 
             titleQuiz.setFont(new Font("Times New Roman", 15));
             titleQuiz.setStyle("-fx-font-weight: bold");
             topLabel.getChildren().add(titleQuiz);
             topLabel.getChildren().add(rightLab);
             topLabel.setSpacing(350.0);
             topLabel.setAlignment(Pos.CENTER_RIGHT);
             root.setTop(topLabel);
             
           //setCenter
             VBox vbox = new VBox();
             HBox hbox = new HBox();
             
             HBox saveAndLoad = new HBox();
             Button addQuest =  new Button("Add Question");
             Button save = new Button("Save");
             Button load = new Button("Load");
             Button takeQ = new Button("Take Quiz");
             
             saveAndLoad.setSpacing(10.0);
             vbox.getChildren().add(addQuest);
             saveAndLoad.getChildren().add(save);
             saveAndLoad.getChildren().add(load);
             vbox.getChildren().add(saveAndLoad);
             vbox.getChildren().add(takeQ);
             vbox.setSpacing(10.0);
             hbox.getChildren().add(vbox);
             vbox.setAlignment(Pos.CENTER);
             hbox.setAlignment(Pos.CENTER);
             root.setCenter(hbox);
            
             save.setOnAction(e -> {
              boolean results = Save.saveMethod("Save Window", "Are you sure you want to create a new save?");
             });
             
             load.setOnAction(e -> {
               boolean result2 = Load.loadMethod("Load Window", "Are you sure you want to load the previous savefile?");
             });
             
             String message = "The add Question button: this buttons will take you to a page where you can customize your questions. \n "
                 + "The Save button: this button will save all of the questions and your progress on this program so far.\n "
                 + "The Load button: this button will load all your previous save file of your progress.\n "
                 + "The Take Quiz: this button becomes available after you have created your questions, \n this will allow you to take the quiz with your questions created.";
             rightLab.setOnAction(e -> { 
               boolean result3 = helpMethod.helpMethod("Help", message);
             });
             
            
             // set total question count to the bottom of the menu
             Label totalQuestion = new Label("Total Question Count: "+ qCount);
             root.setBottom(totalQuestion);
             
            Scene scene = new Scene(root,800,400);
            scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
            primaryStage.setScene(scene);
            primaryStage.setTitle("Quiz Generator");
            primaryStage.show();
            
            primaryStage.setOnCloseRequest(e -> {
              e.consume();
              closeProgram(primaryStage); 
            });
            
            
        } catch(Exception e) {
            e.printStackTrace();
        }
    } 
    public void buttonHandler(ActionEvent e) {
      if (saveButton.getText().equals("Save")) {
        
      }
    }
     private void saveHandler(Button saveButton) {
       
     }
    
    public static void main(String[] args) {
        Application.launch(args);
    }
    private void closeProgram(Stage primaryStage) {
      boolean answer = Warning.display("WARNING!", "Would you like to exit without saving?");
      if(answer) {
        primaryStage.close(); 
      }
    }
}
