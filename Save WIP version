package application;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.TreeMap;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.stage.Modality;
import javafx.stage.Stage;

public class Save extends Button{
  static String file;
  static boolean answer;
  
  public static void saveHelper(String jsonFilepath,QuizGraph qg) throws FileNotFoundException, IOException, ParseException, org.json.simple.parser.ParseException {
    Object obj = new JSONParser().parse(new FileReader(jsonFilepath));
  JSONObject jo = (JSONObject) obj;
  JSONArray packageArray = (JSONArray) jo.get("questionArray"); 

    for (Object o : packageArray)
    {
      JSONObject person = (JSONObject) o;

      String name = (String) person.get("meta-data");
      System.out.println(name);

      String city = (String) person.get("questionText");
      
      System.out.println(city);

      String topic = (String) person.get("topic");
      qg.addTopic(topic);
      System.out.println(topic);
      
      String image = (String) person.get("image");
      System.out.println(image);

      JSONArray choice = (JSONArray) person.get("choiceArray");
      for (Object c : choice)
      {
        System.out.println(c+"");
      }
    }
    }
  
   public static void saveMethod(String Title, String message, QuizGraph qg) {
     Stage window = new Stage();
     window.initModality(Modality.APPLICATION_MODAL);
     window.setTitle("Save");
     window.setMinWidth(250.0);
     Label save = new Label();
     save.setText(message);
     
     Button yButton = new Button("Yes");
     Button nButton = new Button("No");
     
     yButton.setOnAction(e -> {
      try {
        saveHelper(file, qg);
        System.out.println(qg.getTopicQuestions("questionText"));
        System.out.println(qg.questionNum());
        System.out.println(qg.topicNum());
        System.out.println(qg.getAllTopics());
      } catch (IOException | ParseException | org.json.simple.parser.ParseException e2) {
        e2.printStackTrace();
      }
       //answer = true;
       window.close();
     });
     
     nButton.setOnAction(e -> {
       //answer = false;
       window.close();
     });

     VBox layout = new VBox();
     layout.getChildren().addAll(save, yButton, nButton);
     layout.setAlignment(Pos.CENTER);
     Scene scene = new Scene(layout);
     window.setScene(scene);
     window.showAndWait();
     
    //return answer;
   }

}
